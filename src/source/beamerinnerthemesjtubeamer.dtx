% \iffalse meta-comment --------------------------------------------------
% Copyright (C) 2021,2022 SJTUG
%
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
%
%     http://www.apache.org/licenses/LICENSE-2.0
%
% Unless required by applicable law or agreed to in writing, software 
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.
% ------------------------------------------------------------------------ \fi
% \iffalse
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{beamerinnerthemesjtubeamer}[2022/02/18 sjtubeamer inner theme v2.5.2]
%</package>
% \fi
% \CheckSum{0}
% \StopEventually{}
% \iffalse
%<*package>
% ------------------------------------------------------------------- \fi
%
%
% \subsection{Inner Theme}
%
%
% A |beamer| inner theme dictates the style of the frame elements traditionally
% set in the ``body'' of each slide. These include:
%
% \begin{itemize}
%   \item title, part, and section pages;
%   \item itemize, enumerate, and description environments;
%   \item block environments including theorems and proofs;
%   \item figures and tables; and
%   \item footnotes and plain text.
% \end{itemize}
%
%  \subsubsection{Load Packages}
%   Load SJTU VI Library to get the definition on color and shape.
%    \begin{macrocode}
\RequirePackage{sjtuvi}
%    \end{macrocode}
%   Load tcolorbox for creating delicate boxes.
%    \begin{macrocode}
\RequirePackage{tcolorbox}
%    \end{macrocode}
%
%   \subsubsection{Option Declaration}
%  \begin{macro}{\sjtubeamer@inner@cover}
%    \begin{macrocode}
%<*maxplus>
\DefineOption{inner}{cover}{maxplus}
%</maxplus>
%<*max>
\DefineOption{inner}{cover}{max}
%</max>
%<*min>
\DefineOption{inner}{cover}{min}
%</min>
%<*my>
\DefineOption{inner}{cover}{my} % reserved for customization
%</my>
\ExecuteOptionsBeamer{
%<*maxplus>
  maxplus,
%</maxplus>
%<*min>
  min,
%</min>
%<*my>
  my,
%</my>    
%<*max>
  max,
%</max>
}
%    \end{macrocode}
%  \end{macro}
%
%  \begin{macro}{\sjtubeamer@inner@lang}
%    \begin{macrocode}
\DeclareOptionBeamer{cn}{\def\sjtubeamer@inner@lang{cn}}
\DeclareOptionBeamer{en}{\def\sjtubeamer@inner@lang{en}}
\@ifclassloaded{ctexbeamer}{\ExecuteOptionsBeamer{cn}}{
  \ExecuteOptionsBeamer{en}}
%    \end{macrocode}
%  \end{macro}
%
%  \begin{macro}{\sjtubeamer@inner@color}
%    \begin{macrocode}
\DefineOption{inner}{color}{red}
\DefineOption{inner}{color}{blue}
\ExecuteOptionsBeamer{red}
%    \end{macrocode}
%  \end{macro}
%
%    \begin{macrocode}
\ProcessOptionsBeamer
%    \end{macrocode}
%
%    \begin{macrocode}
\PassOptionsToPackage{\sjtubeamer@inner@lang}{sjtucover}
%    \end{macrocode}
%
%   Hard-coded color for blocks. A replica of color theme.
%    \begin{macrocode}
\if\EqualOption{inner}{color}{red}
  \colorlet{cprimary}{sjtuRedPrimary}
  \colorlet{csecondary}{sjtuRedSecondary}
  \colorlet{ctertiary}{sjtuRedTertiary}
  \colorlet{cquanternary}{black}
\else
  \colorlet{cprimary}{sjtuBluePrimary}
  \colorlet{csecondary}{sjtuBlueSecondary}
  \colorlet{ctertiary}{sjtuBlueTertiary}
  \colorlet{cquanternary}{white}
\fi
%    \end{macrocode}
%
%   \subsubsection{Load Packages}\label{sec:innerload}
%
%   Introduce the library from tcolorbox to make code blocks.
%   \verb"listingsutf8" is used to receive UTF-8 input. 
%   The global set on shield externalize will prevent tcolorbox from externalizing. 
%    \begin{macrocode}
\RequirePackage{tcolorbox}
\tcbuselibrary{skins}
\tcbuselibrary{listingsutf8}
\tcbset{shield externalize}
%    \end{macrocode}
%
%   Load Cover Library to get the customized cover.
%    \begin{macrocode}
\RequirePackage{sjtucover}
%    \end{macrocode}
%
%   \subsubsection{Logo \& Title Graphic}
%
%   Set up logo for this cover.
%    \begin{macrocode}
\setbeamertemplate{logo}[\sjtubeamer@inner@cover]
%    \end{macrocode}
%
%  \begin{macro}{\bgcenterbox}
%   Define a command to make a centered background box easily.
%    \begin{macrocode}
\newcommand{\bgcenterbox}[1]{
  \parbox[c][1.1\paperheight][c]{\paperwidth}{
    \centering\resizebox{\paperwidth}{!}{#1}
  }
}
%    \end{macrocode}
%  \end{macro}
%
%   max theme has the background.
%   \verb"\setbeamertemplate{background}{}" after loading the theme will disable it.
%    \begin{macrocode}
\if\EqualOption{inner}{cover}{max}
  \setbeamertemplate{background}
    {\bgcenterbox{\sjtubg[cprimary!50,opacity=0.2]}}
\fi
%    \end{macrocode}
%
%   Redefine the \verb"\titlegraphic" command in \verb"beamer" to implement it into the beamer template management system, as is been done in \verb"\logo".
%   The original definition of \verb"\titlegraphic" is to set the command \verb"\inserttitlegraphic" as its parameter directly.
%    \begin{macrocode}
\def\titlegraphic{\setbeamertemplate{titlegraphic}}
%    \end{macrocode}
%   Redefine the \verb"\inserttitlegraphic" command to use the template \verb"titlegraphic" directly, using the current color setup without forming a group (not \verb"\usebeamertemplate*").
%    \begin{macrocode}
\def\inserttitlegraphic{\usebeamertemplate{titlegraphic}}
%    \end{macrocode}
%
%   Set up titlegraphic for this cover.
%   First set to empty in case that all definitions of this template in \verb"sjtucover" is not extracted.
%    \begin{macrocode}
\setbeamertemplate{titlegraphic}{}
\setbeamertemplate{titlegraphic}[\sjtubeamer@inner@cover]
%    \end{macrocode}
%
% \subsubsection{Covers}
%  This part set up title page, section page, part page, section page and subsection page for this cover based on the library \verb"sjtucover" loaded in section \ref{sec:innerload}.
%
%  Initialize sidebar width to 0pt as no sidebar required, which will be overwritten in outer theme.
%    \begin{macrocode}
\newdimen\beamer@sidebarwidth
\beamer@sidebarwidth=0pt
%    \end{macrocode}
%
%  \begin{macro}{\coverpage}
%  Common command for \verb"\titlepage" and \verb"\bottompage". Disable externalization for generating title page and bottom page, locally.
%    \begin{macrocode}
\def\coverpage#1{
  {
    \tikzset{external/export=false}
    \ifdim\beamer@sidebarwidth=0pt %
      \usebeamertemplate*{#1}
    \else
      \hspace*{-0.5\beamer@sidebarwidth}\parbox[t]{\textwidth}{
        \usebeamertemplate*{#1}
      }
    \fi
  }
}
%    \end{macrocode}
%  \end{macro}
%
% \begin{macro}{\definecover}
%  Command generator for \verb"\maketitle" and \verb"\makebottom", which will receive an optional command for selecting different theme. Redefinition on \verb"\beamer@writeslideentrty" locally will remove the corresponding navigation dot for miniframe outer theme.
%  This command receives one parameter for the cover type like ``title'' or ``bottom''.
%    \begin{macrocode}
\def\definecover#1{
%    \end{macrocode}
%  This command will also generate an auxilary interface like \verb"\titlepage" or \verb"\bottompage", which mainly for overriding the default definition on those macros.
%    \begin{macrocode}
  \expandafter\def\csname #1page\endcsname{
    \coverpage{#1 page}
  }
%    \end{macrocode}
% To avoid the check of \verb"\renewcommand" and to fullfill the same purpose of overriding the original definition like what \verb"\def" does. If the command is not defined, it will get defined as an empty macro first before going into the definition stage in \LaTeX{} command style, in order to use the optional argument.
%    \begin{macrocode}
  \ifcsname make#1\endcsname\else
    \expandafter\def\csname make#1\endcsname{}
  \fi
  \expandafter\renewcommand\csname make#1\endcsname[1][\sjtubeamer@inner@cover]{
    {
      \def\beamer@writeslidentry{\clearpage\beamer@notesactions}
      \setbeamertemplate{#1 page}[##1]
      \ifbeamer@inframe\csname #1page\endcsname\else
        \begin{frame}[plain]
          \csname #1page\endcsname
        \end{frame}\fi
    }
  }
}
%    \end{macrocode}
%  \end{macro}
%
%   Set up commmand for title page and bottom page.
%    \begin{macrocode}
\definecover{title}
\definecover{bottom}
%    \end{macrocode}
%
%   Initialize the title page and bottom page.
%    \begin{macrocode}
\setbeamertemplate{title page}[\sjtubeamer@inner@cover]
\setbeamertemplate{bottom page}[\sjtubeamer@inner@cover]
%    \end{macrocode}
%
%   Set up commmand for part page, section page and subsection page.
%    \begin{macrocode}
\definecover{part}
\definecover{section}
\definecover{subsection}
%    \end{macrocode}
%
%  Initialize the sectioning page.
%    \begin{macrocode}
\setbeamertemplate{part page}[min]
\setbeamertemplate{section page}[min]
\setbeamertemplate{subsection page}[min]
%    \end{macrocode}
%
%  Make a part page for each part by default. 
%  For section and subsection page, we recommend to use the corresponding \verb"\sectionpage" and \verb"\subsectionpage" manually in the main file to be compatible with the syntax of beamer.
%    \begin{macrocode}
\AtBeginPart{
  \makepart
}
%    \end{macrocode}
%
% \subsubsection{Itemize Environments}
%
%   Set the item marker to circle and set the marker for section and subsection in TOC (Table of Contents) to circle.
%    \begin{macrocode}
\useinnertheme{circles}
%    \end{macrocode}
%
% \subsubsection{Block Environments}
%
%   The block in \verb"min" theme is not rounded.
%    \begin{macrocode}
%<*min>
\if\EqualOption{inner}{cover}{min}\else
%</min>
  \setbeamertemplate{blocks}[rounded]
%<*min>
\fi
%</min>
%    \end{macrocode}
%
% \begin{macro}{\highlight}
%   Highlight the given text. Create a primary color background block with white as foreground.
%    \begin{macrocode}
\newtcbox{\highlight}[1][cprimary]{
  on line,
  arc=0pt,
  colback=#1,
  colupper=white,
  boxrule=0pt,
  boxsep=0pt,
  left=4pt,
  right=4pt,
  top=2pt,
  bottom=2pt
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\paragraph}
%   Use \verb"\highlight" macro for making contrast.
%   Since beamer has deleted \verb"\paragraph" macro in this class, this template defines a macro for that to indicate it is another point and more paragraph-like. It is useful for the migration from \verb"article" class.
%    \begin{macrocode}
\providecommand{\paragraph}[1]{
  \highlight{#1}~
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{stampbox}
%   Make a stampbox border, which is a decoration advice from SJTU VI. It has the dependency on \verb"stampline" from \verb"sjtuvi" package.
%    \begin{macrocode}
\newtcolorbox{stampbox}[1][cprimary]{%
  capture=hbox,
  enhanced,
  frame empty,
  interior empty,
  sharp corners,
  top=2pt,bottom=2pt,left=2pt,right=2pt,
  borderline={4pt}{0pt}{
    #1,
    line width=0.5pt,
    decoration={
      stampline,
      segment length=8pt,
      path has corners=true,
    },
    decorate
  }
}
%    \end{macrocode}
% \end{macro}
%
%   Declare the basic listing highlighter. \verb"columns" is set to \verb"flexible" to avoid ugly grid alignment. \verb"breaklines" is set to enable line wrapping.
%    \begin{macrocode}
\lstset{
  basicstyle=\ttfamily\small,
  keywordstyle=\color{cprimary},%
  stringstyle=\color{csecondary},%
  commentstyle=\color{ctertiary!80!gray},%
  columns=flexible,
  extendedchars=false,
  showstringspaces=false,
  showspaces=false,
  breaklines
}
%    \end{macrocode}
%
% \begin{macro}{codeblock}
%   Code block environment is made for presenting code in an obvious way. Two parameters are required. The first parameter is passed to listing, which mostly sets the language to highlight, see the \verb"listings" package for more details. And the second parameter receives the title to make.
%    \begin{macrocode}
\newtcblisting{codeblock}[2][]{
  listing only,
  listing engine=listings,
  listing options={
    #1,%
    numbers=left,
    numberstyle=\color{cprimary!80}\ttfamily\scriptsize,
    numbersep=5pt,
  },
  enhanced,
  sharp corners,
  top=0mm,
  bottom=0mm,
  title=#2,
  colback=cprimary!5,
  colframe=cprimary!80,
  overlay={
    \begin{tcbclipinterior}\fill[cprimary!20]%
      (frame.south west) rectangle ([xshift=5mm]frame.north west);
    \end{tcbclipinterior}
  }
}
%    \end{macrocode}
% \end{macro}
%
%   Extra Support for pgfplots and pgfplotstable (if loaded in the main file).
%    \begin{macrocode}
\AtEndPreamble{%
%    \end{macrocode}
%   Set the default visual theme for \textsc{Pgfplots}. The cycle list is set to the current color theme. And lines on the graph is optimized to make it clear for presentation. The predefinition on the height is made to avoid the overfullbox on the vertical side.
%    \begin{macrocode}
  \@ifpackageloaded{pgfplots}{%
    \pgfplotsset{
      compat=newest,
      every axis/.style={
        font=\small\sffamily,
        cycle multi list={
            mark options={thick}\nextlist
            mark list\nextlist
            cprimary,csecondary,ctertiary\nextlist
          },
        height=0.5*\the\paperheight,
        axis line style={
            cprimary,
            thin
          },
        every tick label/.style={
            cprimary,
            font=\small,
            /pgf/number format/assume math mode=true
          },
        grid style={cprimary!10},
        tick style={cprimary!50},
        minor tick style={cprimary!30},
        xlabel style={cprimary},
        ylabel style={cprimary},
        zlabel style={cprimary},
        legend style={
            draw={cprimary},
            thin,
            nodes={cprimary}
          },
        thick,
      },
    }
  }{}
%    \end{macrocode}
%   Set the style of \textsc{Pgfplotstable}. The \verb"\colorrows" macro here is used for making the header colored. The \verb"booktabs" line is used to create a professional look.
%    \begin{macrocode}
  \@ifpackageloaded{pgfplotstable}{%
    \RequirePackage{array}
    \RequirePackage{colortbl}
    \RequirePackage{booktabs}
%    \end{macrocode}
%   Two macros are defined to make the header colored.
%    \begin{macrocode}
    \def\zapcolorreset{\let\reset@color\relax\ignorespaces}
    \def\colorrows#1{\noalign{\aftergroup\zapcolorreset#1}\ignorespaces}
%    \end{macrocode}
%    \begin{macrocode}
    \pgfplotstableset{
      col sep=comma,
      every table/.style={
        font={\small\sffamily},
      },
      every head row/.style={
        before row={
          \arrayrulecolor{cprimary}
          \toprule
          \colorrows{\color{cprimary}}
        },
        after row={
            \midrule
            \colorrows{\color{black}}
          },
        },
      every last row/.style={
        after row=\bottomrule
      },
    }
    \newcolumntype{L}[1]{>{\begin{pgfplotstablecoltype}[#1]}
            r<{\end{pgfplotstablecoltype}}}
  }{}
%    \end{macrocode}
% Disable the warning from \verb"hyperref" which conflicts the setting in C\TeX{} or CJK. It has to be manually disabled.
%    \begin{macrocode}
  \def\Hy@WarnOptionDisabled#1{
    \def\next{#1}%
    \ifx\next pdfauthor %
      \ifx\next driverfallback %
      \else
        \Hy@Warning{%
          Option `#1' has already been used,\MessageBreak
          setting the option has no effect%
        }
      \fi%
    \fi%
  }
}
%    \end{macrocode}
%
% \iffalse
%</package>
% \fi
%
% \Finale
\endinput
